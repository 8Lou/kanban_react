import { useState } from 'react';
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
} from './ui/dialog';
import { Button } from './ui/button';
import { Input } from './ui/input';
import { Label } from './ui/label';
import { Textarea } from './ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';

interface AddTaskDialogProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  onAdd: (task: {
    title: string;
    description: string;
    priority: 'low' | 'medium' | 'high';
    assignee: string;
    dueDate: string;
    durationEstimate50: number;
  }) => void;
}

export function AddTaskDialog({ open, onOpenChange, onAdd }: AddTaskDialogProps) {
  const [title, setTitle] = useState('');
  const [description, setDescription] = useState('');
  const [priority, setPriority] = useState<'low' | 'medium' | 'high'>('medium');
  const [assignee, setAssignee] = useState('');
  const [dueDate, setDueDate] = useState('');
  const [durationEstimate50, setDurationEstimate50] = useState<number>(0);
  const [estimateError, setEstimateError] = useState('');

  const handleSubmit = () => {
    // –í–∞–ª–∏–¥–∞—Ü–∏—è 50%-–Ω–æ–π –æ—Ü–µ–Ω–∫–∏
    if (!durationEstimate50 || durationEstimate50 <= 0) {
      setEstimateError('–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—É—é –æ—Ü–µ–Ω–∫—É –≤—Ä–µ–º–µ–Ω–∏ (50% –æ—Ç –æ–±—ã—á–Ω–æ–π)');
      return;
    }
    
    if (title.trim()) {
      onAdd({
        title,
        description,
        priority,
        assignee,
        dueDate,
        durationEstimate50,
      });
      setTitle('');
      setDescription('');
      setPriority('medium');
      setAssignee('');
      setDueDate('');
      setDurationEstimate50(0);
      setEstimateError('');
      onOpenChange(false);
    }
  };

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-[525px]">
        <DialogHeader>
          <DialogTitle>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É</DialogTitle>
          <DialogDescription>
            –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–¥–∞—á–µ. –ù–∞–∂–º–∏—Ç–µ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ.
          </DialogDescription>
        </DialogHeader>
        <div className="grid gap-4 py-4">
          <div className="grid gap-2">
            <Label htmlFor="title">–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏</Label>
            <Input
              id="title"
              value={title}
              onChange={(e) => setTitle(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏"
            />
          </div>
          <div className="grid gap-2">
            <Label htmlFor="description">–û–ø–∏—Å–∞–Ω–∏–µ</Label>
            <Textarea
              id="description"
              value={description}
              onChange={(e) => setDescription(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏"
              rows={3}
            />
          </div>
          <div className="grid gap-2">
            <Label htmlFor="priority">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</Label>
            <Select value={priority} onValueChange={(value) => setPriority(value as 'low' | 'medium' | 'high')}>
              <SelectTrigger id="priority">
                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="low">–ù–∏–∑–∫–∏–π</SelectItem>
                <SelectItem value="medium">–°—Ä–µ–¥–Ω–∏–π</SelectItem>
                <SelectItem value="high">–í—ã—Å–æ–∫–∏–π</SelectItem>
              </SelectContent>
            </Select>
          </div>
          <div className="grid gap-2">
            <Label htmlFor="assignee">–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å</Label>
            <Input
              id="assignee"
              value={assignee}
              onChange={(e) => setAssignee(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è"
            />
          </div>
          <div className="grid gap-2">
            <Label htmlFor="dueDate">–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</Label>
            <Input
              id="dueDate"
              type="date"
              value={dueDate}
              onChange={(e) => setDueDate(e.target.value)}
            />
          </div>
          <div className="grid gap-2">
            <Label htmlFor="duration" className="flex items-center gap-2">
              50%-–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ (—á–∞—Å—ã) *
              <span className="text-xs text-orange-600 font-normal">
                ‚ö†Ô∏è –ü—Ä–∏–Ω—Ü–∏–ø –¢–û–°
              </span>
            </Label>
            <Input
              id="duration"
              type="number"
              min="0.5"
              step="0.5"
              value={durationEstimate50 || ''}
              onChange={(e) => {
                setDurationEstimate50(Number(e.target.value));
                setEstimateError('');
              }}
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –æ–±—ã—á–Ω–æ 8 —á–∞—Å–æ–≤ ‚Üí —É–∫–∞–∂–∏—Ç–µ 4"
              className={estimateError ? 'border-red-500' : ''}
            />
            <p className="text-xs text-gray-600">
              üí° –£–∫–∞–∂–∏—Ç–µ <strong>—Å–æ–∫—Ä–∞—â–µ–Ω–Ω—É—é –æ—Ü–µ–Ω–∫—É –±–µ–∑ –∑–∞–ø–∞—Å–æ–≤ –≤—Ä–µ–º–µ–Ω–∏</strong>. 
              –û—Å—Ç–∞–ª—å–Ω—ã–µ 50% –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤—è—Ç—Å—è –≤ –±—É—Ñ–µ—Ä –ø–æ—Ç–æ–∫–∞.
            </p>
            {estimateError && (
              <p className="text-xs text-red-600">{estimateError}</p>
            )}
          </div>
        </div>
        <DialogFooter>
          <Button variant="outline" onClick={() => onOpenChange(false)}>
            –û—Ç–º–µ–Ω–∞
          </Button>
          <Button onClick={handleSubmit}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
}
